name: Test and Score

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Install dependencies
        run: npm install
        
      - name: Run Jest tests
        id: run-tests
        run: |
          # Run tests and save results (continue on test failures)
          npx jest --json --outputFile=results.json || true
          
          # Calculate score if results exist
          if [ -f results.json ]; then
            PASSED=$(jq '.numPassedTests' results.json)
            TOTAL=$(jq '.numTotalTests' results.json)
            
            # Calculate score (0.4 points per passing test, max 4)
            SCORE=$(echo "scale=2; $PASSED * 0.4" | bc)
            if (( $(echo "$SCORE > 4" | bc -l) )); then
              SCORE="4.0"
            fi
            
            echo "passed=$PASSED" >> $GITHUB_OUTPUT
            echo "total=$TOTAL" >> $GITHUB_OUTPUT
            echo "score=$SCORE" >> $GITHUB_OUTPUT
          else
            echo "No test results found"
            echo "passed=0" >> $GITHUB_OUTPUT
            echo "total=0" >> $GITHUB_OUTPUT
            echo "score=0" >> $GITHUB_OUTPUT
          fi
      
      - name: Display Test Results
        run: |
          echo "Tests Passed: ${{ steps.run-tests.outputs.passed }} / ${{ steps.run-tests.outputs.total }}"
          echo "Score: ${{ steps.run-tests.outputs.score }} / 4.0"
      
      - name: Create Test Summary
        run: |
          echo "{\"passed\":${{ steps.run-tests.outputs.passed }},\"total\":${{ steps.run-tests.outputs.total }},\"score\":${{ steps.run-tests.outputs.score }}}" > test-summary.json
          cat test-summary.json
      
      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        with:
          runners: test
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SCORE: ${{ steps.run-tests.outputs.score }}
          # Using just the score without trying to pass complex JSON
          # This is based on the error messages which suggest the action may only need the score
