name: Test and Score

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run Jest tests and output results
        id: run-tests
        run: |
          npx jest --json --outputFile=results.json || true

          if [ ! -f results.json ]; then
            echo "results.json not found!"
            exit 1
          fi

          PASSED=$(jq '.numPassedTests' results.json)
          TOTAL=$(jq '.numTotalTests' results.json)

          if [ -z "$PASSED" ] || [ -z "$TOTAL" ]; then
            echo "Failed to parse test results!"
            exit 1
          fi

          echo "✅ Tests Passed: $PASSED / $TOTAL"

          SCORE=$(echo "$PASSED * 0.4" | bc)
          if (( $(echo "$SCORE > 4" | bc -l) )); then
            SCORE=4
          fi
          echo "🏆 Score: $SCORE / 4"

          # Set outputs for later steps
          ENCODED_RESULTS=$(base64 -w 0 results.json)
          echo "score=$SCORE" >> $GITHUB_OUTPUT
          echo "results_json=$ENCODED_RESULTS" >> $GITHUB_OUTPUT

      - name: Decode results and report score
        run: |
          echo "${{ steps.run-tests.outputs.results_json }}" | base64 -d > decoded_results.json
          cat decoded_results.json
        env:
          SCORE: ${{ steps.run-tests.outputs.score }}

      - name: Report score to GitHub Classroom
        uses: classroom-resources/autograding-grading-reporter@v1
        with:
          runners: test
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          TEST_RESULTS: ${{ steps.run-tests.outputs.results_json }}
          SCORE: ${{ steps.run-tests.outputs.score }}

      - name: Debug - Show raw results.json
        run: cat results.json
